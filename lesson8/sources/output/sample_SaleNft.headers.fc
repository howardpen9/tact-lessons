;;
;; Header files for SaleNft
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_load_address_opt
(slice, slice) __tact_load_address_opt(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_address_opt
builder __tact_store_address_opt(builder b, slice address) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_slice_eq_bits_nullable_one
int __tact_slice_eq_bits_nullable_one(slice a, slice b) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $ProvideWalletAddress$_store
builder $ProvideWalletAddress$_store(builder build_0, (int, slice, int) v) inline;

;; $ProvideWalletAddress$_store_cell
cell $ProvideWalletAddress$_store_cell((int, slice, int) v) inline;

;; $TakeWalletAddress$_load
(slice, ((int, slice, slice))) $TakeWalletAddress$_load(slice sc_0) inline;

;; $NftTransfer$_store
builder $NftTransfer$_store(builder build_0, (int, slice, slice, cell, int, slice) v) inline_ref;

;; $NftTransfer$_store_cell
cell $NftTransfer$_store_cell((int, slice, slice, cell, int, slice) v) inline;

;; $NftOwnershipAssigned$_load
(slice, ((int, slice, slice))) $NftOwnershipAssigned$_load(slice sc_0) inline;

;; $Transfer$_store
builder $Transfer$_store(builder build_0, (int, int, slice, slice, cell, int, slice) v) inline_ref;

;; $Transfer$_store_cell
cell $Transfer$_store_cell((int, int, slice, slice, cell, int, slice) v) inline;

;; $TransferNotification$_load
(slice, ((int, int, slice, slice))) $TransferNotification$_load(slice sc_0) inline;

;; $SaleNft$_store
builder $SaleNft$_store(builder build_0, (slice, slice, int, slice, slice, int, int, slice, int, int) v) inline;

;; $SaleNft$_load
(slice, ((slice, slice, int, slice, slice, int, int, slice, int, int))) $SaleNft$_load(slice sc_0) inline;

;; $PriceInfo$_to_tuple
tuple $PriceInfo$_to_tuple(((int, int, int, slice, int, slice)) v) inline;

;; $PriceInfo$_to_external
(int, int, int, slice, int, slice) $PriceInfo$_to_external(((int, int, int, slice, int, slice)) v) inline;

;; $SaleInfo$_to_external
(int, slice, slice, int, slice, slice, tuple) $SaleInfo$_to_external(((int, slice, slice, int, slice, slice, (int, int, int, slice, int, slice))) v) inline;

;; $SaleNft$init$_load
(slice, ((slice, slice, int, slice, int, int, slice))) $SaleNft$init$_load(slice sc_0) inline_ref;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice to, int value, int mode, cell body) inline;

;; $ProvideWalletAddress$_constructor_query_id_owner_address_include_address
((int, slice, int)) $ProvideWalletAddress$_constructor_query_id_owner_address_include_address(int query_id, slice owner_address, int include_address) inline;

;; $SaleNft$_contract_init
(slice, slice, int, slice, slice, int, int, slice, int, int) $SaleNft$_contract_init(slice $owner, slice $nft, int $price, slice $jetton_master, int $numerator, int $denominator, slice $royalty_destination) impure inline_ref;

;; $SaleNft$_contract_load
(slice, slice, int, slice, slice, int, int, slice, int, int) $SaleNft$_contract_load() impure inline_ref;

;; $SaleNft$_contract_store
() $SaleNft$_contract_store((slice, slice, int, slice, slice, int, int, slice, int, int) v) impure inline;

;; $global_emptyCell
cell $global_emptyCell() impure inline;

;; $Cell$_fun_asSlice
slice $Cell$_fun_asSlice(cell $self) impure inline;

;; $global_emptySlice
slice $global_emptySlice() impure inline;

;; $Transfer$_constructor_query_id_amount_destination_response_destination_custom_payload_forward_ton_amount_forward_payload
((int, int, slice, slice, cell, int, slice)) $Transfer$_constructor_query_id_amount_destination_response_destination_custom_payload_forward_ton_amount_forward_payload(int query_id, int amount, slice destination, slice response_destination, cell custom_payload, int forward_ton_amount, slice forward_payload) inline;

;; $SaleNft$_fun_send_jetton
((slice, slice, int, slice, slice, int, int, slice, int, int), ()) $SaleNft$_fun_send_jetton((slice, slice, int, slice, slice, int, int, slice, int, int) $self, slice $to, int $value, int $mode, int $query_id, int $amount, slice $destination, slice $response_destination, cell $custom_payload) impure inline_ref;

;; $PriceInfo$_constructor_price_full_price_royalty_fee_royalty_destination_service_fee_service_address
((int, int, int, slice, int, slice)) $PriceInfo$_constructor_price_full_price_royalty_fee_royalty_destination_service_fee_service_address(int price, int full_price, int royalty_fee, slice royalty_destination, int service_fee, slice service_address) inline;

;; $SaleNft$_fun_get_price_info
((slice, slice, int, slice, slice, int, int, slice, int, int), (int, int, int, slice, int, slice)) $SaleNft$_fun_get_price_info((slice, slice, int, slice, slice, int, int, slice, int, int) $self) impure inline_ref;

;; $SaleInfo$_constructor_sale_ended_owner_nft_nft_received_jetton_master_jetton_wallet_price_info
((int, slice, slice, int, slice, slice, (int, int, int, slice, int, slice))) $SaleInfo$_constructor_sale_ended_owner_nft_nft_received_jetton_master_jetton_wallet_price_info(int sale_ended, slice owner, slice nft, int nft_received, slice jetton_master, slice jetton_wallet, (int, int, int, slice, int, slice) price_info) inline;

;; $SaleNft$_fun_get_sale_info
((slice, slice, int, slice, slice, int, int, slice, int, int), (int, slice, slice, int, slice, slice, (int, int, int, slice, int, slice))) $SaleNft$_fun_get_sale_info((slice, slice, int, slice, slice, int, int, slice, int, int) $self) impure inline_ref;

;; $SaleNft$_fun_requireOwner
((slice, slice, int, slice, slice, int, int, slice, int, int), ()) $SaleNft$_fun_requireOwner((slice, slice, int, slice, slice, int, int, slice, int, int) $self) impure inline_ref;

;; $SaleNft$_fun_owner
((slice, slice, int, slice, slice, int, int, slice, int, int), slice) $SaleNft$_fun_owner((slice, slice, int, slice, slice, int, int, slice, int, int) $self) impure inline_ref;

;; $NftTransfer$_constructor_query_id_new_owner_response_destination_custom_payload_forward_amount_forward_payload
((int, slice, slice, cell, int, slice)) $NftTransfer$_constructor_query_id_new_owner_response_destination_custom_payload_forward_amount_forward_payload(int query_id, slice new_owner, slice response_destination, cell custom_payload, int forward_amount, slice forward_payload) inline;

;; $SendParameters$_constructor_to_value_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_body(slice to, int value, cell body) inline;
